#!/usr/bin/env python

#This is the file to make my first shake
#a proof of concept with only protein and water

import rospy
import time
from std_msgs.msg import String
from shakestation.msg import JointPose
from robotis_controller_msgs.msg import StatusMsg
from servosix import ServoSix

def manipulator_status_callback(data):
	rospy.loginfo(rospy.get_caller_id() + " Entered manipulator_status_callback")
	if data.status_msg == "End Trajectory":
		MANIPULATOR_MOVING = False	
		rospy.loginfo(rospy.get_caller_id() + " MANIPULATOR_MOVING set to FALSE")
	rospy.loginfo(rospy.get_caller_id() + " Exiting manipulator_status_callback")

def manipulator_move(joints):
	rospy.loginfo(rospy.get_caller_id() + " Entering manipulator_move")
	msg = JointPose()
	msg.name = ["joint1", "joint2", "joint3", "joint4", "joint5", "joint6"]
	msg.value = [joints[0], joints[1], joints[2], joints[3], joints[4], joints[5]]
	MANIPULATOR_MOVING = True
	pub.publish(msg)
	rospy.loginfo(rospy.get_caller_id() + " publish just finished")
	mustend = time.time() + 10
	while time.time() < mustend:
		if not MANIPULATOR_MOVING: break
		time.sleep(.1)

def build_shake():

	#open gripper
	ss= ServoSix()
	ss.set_servo(1,10)
	time.sleep(1) 

	#move the manipulator to the start position
	manipulator_move([0.0, -0.6579891280018623, 0.05009094953223726, 0.0, 0.6085963101704226, 0.0])
	print("moved to start position 1")

	#move the manipulator to the initial cup position
	manipulator_move([-0.7819075048934596, 0.9948376736367678, 0.43493604959698695, -0.2617993877991494, -1.53588974175501, -0.00890117918517108])
	print("moved to approach cup postion 2")

	#move the manipulator to the grasp cup position
	manipulator_move([-0.7819075048934596, 0.9948376736367678, 0.43493604959698695, 0.0, -1.53588974175501, -0.00890117918517108])
	print("moved to grasp cup postion 3")

	#grasp cup
	t_end = time.time() + 20
	while time.time() < t_end:
		ss.set_servo(1,30)
	time.sleep(2) 
	print("grasped cup")

	#move the manipulator to the initial cup position
	manipulator_move([-0.7819075048934596, 0.9948376736367678, 0.43493604959698695, -0.2617993877991494, -1.53588974175501, -0.00890117918517108])
	print("moved to approach cup postion 4")

	#move the manipulator to the start position
	manipulator_move([0.0, -0.6579891280018623, 0.05009094953223726, 0.0, 0.6085963101704226, 0.0])
	print("returned to start position 5")

if __name__=='__main__':
	try:
		MANIPULATOR_MOVING = False
		
		#create the ROS node for the application	
		rospy.init_node('shakemaker')

		#setup publisher to send manipulator joint commands, allow 2 seconds for publisher to register
		pub = rospy.Publisher('/robotis/base/joint_pose_msg',JointPose, queue_size=1)
		time.sleep(2) 

		#setup a subscriber to recieve notifications about manipulator status, allow 2 seconds for subscriber to register
		rospy.Subscriber("/robotis/status", StatusMsg, manipulator_status_callback)
		time.sleep(2) 

		#run the main application
		build_shake()
	except rospy.ROSInterruptException:
		pass
