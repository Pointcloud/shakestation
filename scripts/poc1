#!/usr/bin/env python

#This is the file to make my first shake
#proof of concept with only protein and water

import rospy
import time
from std_msgs.msg import String
from std_msgs.msg import Int32
from shakestation.msg import JointPose
from robotis_controller_msgs.msg import StatusMsg
from servosix import ServoSix

def manipulator_status_callback(data):
	global MANIPULATOR_MOVING
	if data.status_msg == "End Trajectory":
		MANIPULATOR_MOVING = False	

def manipulator_move(joints):
	global MANIPULATOR_MOVING
	MANIPULATOR_MOVING = True
	msg = JointPose()
	msg.name = ["joint1", "joint2", "joint3", "joint4", "joint5", "joint6"]
	msg.value = [joints[0], joints[1], joints[2], joints[3], joints[4], joints[5]]
	pubManipulator.publish(msg)
	mustend = time.time() + 10
	while time.time() < mustend:
		if not MANIPULATOR_MOVING: break
		time.sleep(.1)

def build_shake():

	#open gripper
	pubGripper.publish(40)
	print("opened gripper")

################################################################
######################### Pick Up Cup ##########################
################################################################

	#move the manipulator to the start position
	manipulator_move([0.0, -0.6579891280018623, 0.05009094953223726, 0.0, 0.6085963101704226, 0.0])

	#move the manipulator to the initial cup position
	manipulator_move([-0.7819075048934596, 0.9948376736367678, 0.43493604959698695, -0.2617993877991494, -1.527163095490381, 0.06981317007977318])

	#move the manipulator to the grasp cup position
	manipulator_move([-0.7819075048934596, 0.9948376736367678, 0.43493604959698695, 0.0, -1.527163095490381, 0.06981317007977318])

	#close gripper to grasp cup
	pubGripper.publish(5)
	print("picked up cup")

	#move the manipulator to clear the platform
	manipulator_move([-0.7819075048934596, 0.9948376736367678, 0.43493604959698695, 0.0, -1.5707963267948966, 0.06981317007977318])

##############################################################
####################### Add Water to Cup #####################
##############################################################

	#move the manipulator to water base approach position
	manipulator_move([-0.3490658503988659, 0.9948376736367678, 0.43493604959698695, 0.0, -1.5707963267948966, 0.06981317007977318])

	#move the manipulator to lower cup to water base
	manipulator_move([-0.3490658503988659, 0.9948376736367678, 0.43493604959698695, 0.0, -1.527163095490381, 0.06981317007977318])

	#open gripper
	pubGripper.publish(40)

	#move to clear from cup
	manipulator_move([-0.5235987755982988, 0.9948376736367678, 0.43493604959698695, 0.0, -1.527163095490381, 0.06981317007977318])

	#move move to clear from base
	manipulator_move([-0.5235987755982988, 0.7853981633974483, 0.43493604959698695, 0.0, -1.5707963267948966, 0.06981317007977318])

	#move the manipulator to the water handle approach position
	manipulator_move([-0.4363323129985824, 0.3839724354387525, -0.06981317007977318, 0.0, 0.0, 0.06981317007977318])

	#move the manipulator to the water handle closed flow position
	manipulator_move([-0.3490658503988659, 0.3839724354387525, -0.06981317007977318, 0.0, 0.0, 0.06981317007977318])

	#close gripper
	#add code here

	#move the manipulator to the water handle open flow position

	#wait for a specified time for the correct amount of water to fill the cup
	
	#move the manipulator to the water handle closed flow position

	#move the manipulator to the water handle approach position

	#move the manipulator to the water base approach position

	#move the manipulator to set cup on water base

###################################################################
####################### Add Protein to Cup ########################
###################################################################


###################################################################
####################### Mix Ingredients ###########################
####################################################################


####################################################################
####################### Return Cup to Cup Stand ####################
####################################################################
	

if __name__=='__main__':
	try:
		#create global variable to identify whether the manipulator is currently moving
		MANIPULATOR_MOVING = False
		
		#create the ROS node for the application	
		rospy.init_node('shakemaker')

		#setup publisher to send manipulator joint commands, allow 2 seconds for publisher to register
		pubManipulator = rospy.Publisher('/robotis/base/joint_pose_msg',JointPose, queue_size=1)
		time.sleep(1) 

		#setup publisher to send gripper commands allow 2 seconds for publisher to register
		pubGripper = rospy.Publisher('/gripperControl',Int32, queue_size=1)
		time.sleep(1) 

		#setup a subscriber to recieve notifications about manipulator status, allow 2 seconds for subscriber to register
		rospy.Subscriber("/robotis/status", StatusMsg, manipulator_status_callback)
		time.sleep(1) 

		#run the main application
		build_shake()
	except rospy.ROSInterruptException:
		pass
